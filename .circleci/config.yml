# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    shell: /bin/bash --login

    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results

    docker:
    # specify the version you desire here
    - image: circleci/php:7.4

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    - image: cimg/mysql:5.7
      environment:
        MYSQL_ROOT_PASSWORD: 'secured_password'
        MYSQL_DATABASE: openchurch
        MYSQL_USER: openchurch
        MYSQL_PASSWORD: openchurch

    - image: elasticsearch:7.17.3
      environment:
        - ES_JAVA_OPTS=-Xms750m -Xmx750m
        - discovery.type=single-node

    working_directory: ~/repo

    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORT
    - run: cp .env.test .env

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "composer.json" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: composer install -n --prefer-dist
    - run: sudo apt-get update && sudo apt-get install -y mariadb-client wget
    - run: sudo docker-php-ext-install pdo pdo_mysql

    - save_cache:
        paths:
        - ./vendor
        key: v1-dependencies-{{ checksum "composer.json" }}

    # import DB schema
    - run: bin/console doctrine:migration:migrate -n --env=test

    # import fixtures
    - run: mysql -h 127.0.0.1 -u root -psecured_password openchurch < src/DataFixtures/fixtures.sql

    # fill elasticsearch
    - run: bin/console fos:elastica:populate --env=test

    # PHPStan
    - run: ./vendor/bin/phpstan analyze src

    # Linter
    - run: ./vendor/bin/php-cs-fixer -vvv --no-ansi fix --dry-run --diff

    # run tests!
    - run: ./vendor/bin/phpunit

    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results

    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: var/logs/test.log
    - store_artifacts:
        path: coverage
    - store_artifacts:
        path: /tmp/circleci-test-results
